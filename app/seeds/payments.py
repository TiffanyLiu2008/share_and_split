from app.models import db, Payment, environment, SCHEMA
from sqlalchemy.sql import text

def seed_payments():
    payment_1_2 = Payment(expense_id=1, borrower_id=2, payment_made=False)
    payment_1_3 = Payment(expense_id=1, borrower_id=3, payment_made=False)
    payment_1_4 = Payment(expense_id=1, borrower_id=4, payment_made=False)
    payment_1_5 = Payment(expense_id=1, borrower_id=5, payment_made=True)
    payment_2_1 = Payment(expense_id=2, borrower_id=1, payment_made=False)
    payment_2_3 = Payment(expense_id=2, borrower_id=3, payment_made=False)
    payment_2_4 = Payment(expense_id=2, borrower_id=4, payment_made=False)
    payment_2_5 = Payment(expense_id=2, borrower_id=5, payment_made=True)
    payment_3_1 = Payment(expense_id=3, borrower_id=1, payment_made=False)
    payment_3_2 = Payment(expense_id=3, borrower_id=2, payment_made=False)
    payment_3_4 = Payment(expense_id=3, borrower_id=4, payment_made=False)
    payment_3_5 = Payment(expense_id=3, borrower_id=5, payment_made=True)
    payment_4_1 = Payment(expense_id=4, borrower_id=1, payment_made=False)
    payment_4_2 = Payment(expense_id=4, borrower_id=2, payment_made=False)
    payment_4_3 = Payment(expense_id=4, borrower_id=3, payment_made=False)
    payment_4_5 = Payment(expense_id=4, borrower_id=5, payment_made=True)
    payment_5_1 = Payment(expense_id=5, borrower_id=1, payment_made=False)
    payment_5_2 = Payment(expense_id=5, borrower_id=2, payment_made=False)
    payment_5_3 = Payment(expense_id=5, borrower_id=3, payment_made=False)
    payment_5_4 = Payment(expense_id=5, borrower_id=4, payment_made=True)
    payment_6_2 = Payment(expense_id=6, borrower_id=2, payment_made=False)
    payment_6_3 = Payment(expense_id=6, borrower_id=3, payment_made=False)
    payment_6_4 = Payment(expense_id=6, borrower_id=4, payment_made=False)
    payment_6_5 = Payment(expense_id=6, borrower_id=5, payment_made=True)
    payment_7_1 = Payment(expense_id=7, borrower_id=1, payment_made=False)
    payment_7_3 = Payment(expense_id=7, borrower_id=3, payment_made=False)
    payment_7_4 = Payment(expense_id=7, borrower_id=4, payment_made=False)
    payment_7_5 = Payment(expense_id=7, borrower_id=5, payment_made=True)
    payment_8_1 = Payment(expense_id=8, borrower_id=1, payment_made=False)
    payment_8_2 = Payment(expense_id=8, borrower_id=2, payment_made=False)
    payment_8_4 = Payment(expense_id=8, borrower_id=4, payment_made=False)
    payment_8_5 = Payment(expense_id=8, borrower_id=5, payment_made=True)
    payment_9_1 = Payment(expense_id=9, borrower_id=1, payment_made=False)
    payment_9_2 = Payment(expense_id=9, borrower_id=2, payment_made=False)
    payment_9_3 = Payment(expense_id=9, borrower_id=3, payment_made=False)
    payment_9_5 = Payment(expense_id=9, borrower_id=5, payment_made=True)
    payment_10_1 = Payment(expense_id=10, borrower_id=1, payment_made=False)
    payment_10_2 = Payment(expense_id=10, borrower_id=2, payment_made=False)
    payment_10_3 = Payment(expense_id=10, borrower_id=3, payment_made=False)
    payment_10_4 = Payment(expense_id=10, borrower_id=4, payment_made=True)

    db.session.add(payment_1_2)
    db.session.add(payment_1_3)
    db.session.add(payment_1_4)
    db.session.add(payment_1_5)
    db.session.add(payment_2_1)
    db.session.add(payment_2_3)
    db.session.add(payment_2_4)
    db.session.add(payment_2_5)
    db.session.add(payment_3_1)
    db.session.add(payment_3_2)
    db.session.add(payment_3_4)
    db.session.add(payment_3_5)
    db.session.add(payment_4_1)
    db.session.add(payment_4_2)
    db.session.add(payment_4_3)
    db.session.add(payment_4_5)
    db.session.add(payment_5_1)
    db.session.add(payment_5_2)
    db.session.add(payment_5_3)
    db.session.add(payment_5_4)
    db.session.add(payment_6_2)
    db.session.add(payment_6_3)
    db.session.add(payment_6_4)
    db.session.add(payment_6_5)
    db.session.add(payment_7_1)
    db.session.add(payment_7_3)
    db.session.add(payment_7_4)
    db.session.add(payment_7_5)
    db.session.add(payment_8_1)
    db.session.add(payment_8_2)
    db.session.add(payment_8_4)
    db.session.add(payment_8_5)
    db.session.add(payment_9_1)
    db.session.add(payment_9_2)
    db.session.add(payment_9_3)
    db.session.add(payment_9_5)
    db.session.add(payment_10_1)
    db.session.add(payment_10_2)
    db.session.add(payment_10_3)
    db.session.add(payment_10_4)

    db.session.commit()

# Uses a raw SQL query to TRUNCATE or DELETE the users table. SQLAlchemy doesn't
# have a built in function to do this. With postgres in production TRUNCATE
# removes all the data from the table, and RESET IDENTITY resets the auto
# incrementing primary key, CASCADE deletes any dependent entities.  With
# sqlite3 in development you need to instead use DELETE to remove all data and
# it will reset the primary keys for you as well.
def undo_payments():
    if environment == "production":
        db.session.execute(f"TRUNCATE table {SCHEMA}.payments RESTART IDENTITY CASCADE;")
    else:
        db.session.execute(text("DELETE FROM payments"))

    db.session.commit()
